// Jacob Paullus JDP160430
// CS2336 Khan
// Description: Programming calculator from windows(modified)

import javax.swing.*;
import java.awt.event.*;
import java.lang.StringBuilder;
import java.util.ArrayList;
import java.util.List;

public class Calculator extends JFrame implements ActionListener {

    dectobin dectobin = new dectobin();
    bintodec bintodec = new bintodec();
    hextodec hextodec = new hextodec();
    dectohex dectohex = new dectohex();
    octtodec octtodec = new octtodec();
    dectooct dectooct = new dectooct();

    // various number holding variables
    private static final int sizeOfIntInHalfBytes = 8;
    private static final int numberOfBitsInAHalfByte = 4;
    private static final int halfByte = 0x0F;
    private static final char[] hexDigits = {
            '0', '1', '2', '3', '4', '5', '6', '7',
            '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'
    };
    int tempOper[] = {0};
    int tempNumOne[] = {-1};
    int tempNumTwo[] = {-1};
    int tempEqual[] = {-1};
    int lastEntry[] = {-1};
    int currentSetting[] = {2};
    int previousSetting[] = {2};
    String numOneHex[] = {""};
    String numTwoHex[] = {""};
    List<String> binOneArray = new ArrayList<String>();
    List<String> binTwoArray = new ArrayList<String>();
    int octalOne[] = {-1};
    int octalTwo[] = {-1};


    // makung the buttons + labels
    JToolBar toolBar = new JToolBar();
    JButton btnView = new JButton("View");
    JButton btnEdit = new JButton("Edit");
    JButton btnHelp = new JButton("Help");
    JTextArea textArea = new JTextArea();
    JRadioButton rdbtnHex = new JRadioButton("Hex");
    JRadioButton rdbtnDec = new JRadioButton("Dec");
    JRadioButton rdbtnOct = new JRadioButton("Oct");
    JRadioButton rdbtnBin = new JRadioButton("Bin");
    JRadioButton rdbtnQword = new JRadioButton("Qword");
    JRadioButton rdbtnDword = new JRadioButton("Dword");
    JRadioButton rdbtnWord = new JRadioButton("Word");
    JRadioButton rdbtnByte = new JRadioButton("Byte");
    JButton blank2 = new JButton("");
    JButton blank1 = new JButton("");
    JButton btnA = new JButton("A");
    JButton btnMc = new JButton("");
    JButton btnMr = new JButton("");
    JButton btnMs = new JButton("");
    JButton btnM = new JButton("");
    JButton blank4 = new JButton("");
    JButton blank3 = new JButton("");
    JButton btnB = new JButton("B");
    JButton btnbs = new JButton("\u2190");
    JButton btnCe = new JButton("ce");
    JButton btnC = new JButton("c");
    JButton btnpm = new JButton("\u00B1");
    JButton btnnum7 = new JButton("7");
    JButton blank6 = new JButton("");
    JButton blank5 = new JButton("");
    JButton btndiv = new JButton("/");
    JButton btnC_1 = new JButton("C");
    JButton btnnum8 = new JButton("8");
    JButton btnnum9 = new JButton("9");
    JButton blank8 = new JButton("");
    JButton blank7 = new JButton("");
    JButton btnD = new JButton("D");
    JButton btnnum4 = new JButton("4");
    JButton btnnum5 = new JButton("5");
    JButton btnmult = new JButton("*");
    JButton btnnum6 = new JButton("6");
    JButton btnEqual = new JButton("=");
    JButton btnI = new JButton("I");
    JButton btnsqr = new JButton("\u221A");
    JButton btnM_1 = new JButton("");
    JButton btnplus = new JButton("+");
    JButton btndec = new JButton(".");
    JButton btnnum0 = new JButton("0");
    JButton blank12 = new JButton("");
    JButton btnmod = new JButton("%");
    JButton btnF = new JButton("F");
    JButton blank11 = new JButton("");
    JButton btnminus = new JButton("-");
    JButton btnnum3 = new JButton("3");
    JButton btnnum2 = new JButton("2");
    JButton btnnum1 = new JButton("1");
    JButton btnE = new JButton("E");
    JButton blank9 = new JButton("");
    JButton blank10 = new JButton("");
    JPopupMenu popup = new JPopupMenu();


    public Calculator() {
        toolBar.setBounds(0, 0, 127, 22);
        getContentPane().add(toolBar);

        toolBar.add(btnView);
        btnView.addActionListener(this);

        toolBar.add(btnEdit);
        btnEdit.addActionListener(this);

        toolBar.add(btnHelp);
        btnHelp.addActionListener(this);

        textArea.setBounds(28, 27, 482, 64);
        getContentPane().add(textArea);

        rdbtnHex.setBounds(28, 157, 57, 23);
        getContentPane().add(rdbtnHex);
        rdbtnHex.setSelected(false);
        rdbtnHex.addActionListener(this);

        rdbtnDec.setBounds(28, 178, 57, 23);
        getContentPane().add(rdbtnDec);
        rdbtnDec.setSelected(true);
        rdbtnDec.addActionListener(this);

        rdbtnOct.setBounds(28, 199, 57, 23);
        getContentPane().add(rdbtnOct);
        rdbtnOct.setSelected(false);
        rdbtnOct.addActionListener(this);

        rdbtnBin.setBounds(28, 220, 57, 23);
        getContentPane().add(rdbtnBin);
        rdbtnBin.setSelected(false);
        rdbtnBin.addActionListener(this);

        rdbtnQword.setBounds(28, 269, 73, 23);
        getContentPane().add(rdbtnQword);
        rdbtnQword.setSelected(true);
        rdbtnQword.addActionListener(this);

        rdbtnDword.setBounds(28, 290, 73, 23);
        getContentPane().add(rdbtnDword);
        rdbtnDword.setSelected(false);
        rdbtnDword.addActionListener(this);

        rdbtnWord.setBounds(28, 311, 73, 23);
        getContentPane().add(rdbtnWord);
        rdbtnWord.setSelected(false);
        rdbtnWord.addActionListener(this);

        rdbtnByte.setBounds(28, 332, 73, 23);
        getContentPane().add(rdbtnByte);
        rdbtnByte.setSelected(false);
        rdbtnByte.addActionListener(this);

        blank2.setBounds(170, 157, 47, 23);
        getContentPane().add(blank2);

        blank1.setBounds(121, 157, 47, 23);
        getContentPane().add(blank1);

        btnA.setBounds(219, 157, 47, 23);
        getContentPane().add(btnA);
        btnA.addActionListener(this);

        btnMc.setBounds(268, 157, 47, 23);
        getContentPane().add(btnMc);

        btnMr.setBounds(317, 157, 47, 23);
        getContentPane().add(btnMr);

        btnMs.setBounds(366, 157, 47, 23);
        getContentPane().add(btnMs);

        btnM.setBounds(415, 157, 47, 23);
        getContentPane().add(btnM);

        blank4.setBounds(170, 190, 47, 23);
        getContentPane().add(blank4);

        blank3.setBounds(121, 190, 47, 23);
        getContentPane().add(blank3);

        btnB.setBounds(219, 190, 47, 23);
        getContentPane().add(btnB);
        btnB.addActionListener(this);

        btnbs.setBounds(268, 190, 47, 23);
        getContentPane().add(btnbs);
        btnbs.addActionListener(this);

        btnCe.setBounds(317, 190, 48, 23);
        getContentPane().add(btnCe);
        btnCe.addActionListener(this);

        btnC.setBounds(366, 190, 47, 23);
        getContentPane().add(btnC);
        btnC.addActionListener(this);

        btnpm.setBounds(415, 190, 47, 23);
        getContentPane().add(btnpm);
        btnpm.addActionListener(this);

        blank6.setBounds(170, 224, 47, 23);
        getContentPane().add(blank6);

        blank5.setBounds(121, 224, 47, 23);
        getContentPane().add(blank5);

        btnC_1.setBounds(219, 224, 47, 23);
        getContentPane().add(btnC_1);
        btnC_1.addActionListener(this);

        btnnum7.setBounds(268, 224, 47, 23);
        getContentPane().add(btnnum7);
        btnnum7.addActionListener(this);

        btnnum8.setBounds(317, 224, 47, 23);
        getContentPane().add(btnnum8);
        btnnum8.addActionListener(this);

        btnnum9.setBounds(366, 224, 47, 23);
        getContentPane().add(btnnum9);
        btnnum9.addActionListener(this);

        btndiv.setBounds(415, 224, 47, 23);
        getContentPane().add(btndiv);
        btndiv.addActionListener(this);

        blank8.setBounds(170, 258, 47, 23);
        getContentPane().add(blank8);

        blank7.setBounds(121, 258, 47, 23);
        getContentPane().add(blank7);

        btnD.setBounds(219, 258, 47, 23);
        getContentPane().add(btnD);
        btnD.addActionListener(this);

        btnnum4.setBounds(268, 258, 47, 23);
        getContentPane().add(btnnum4);
        btnnum4.addActionListener(this);

        btnnum5.setBounds(317, 258, 47, 23);
        getContentPane().add(btnnum5);
        btnnum5.addActionListener(this);

        btnnum6.setBounds(366, 258, 47, 23);
        getContentPane().add(btnnum6);
        btnnum6.addActionListener(this);

        btnmult.setBounds(415, 258, 47, 23);
        getContentPane().add(btnmult);
        btnmult.addActionListener(this);

        blank10.setBounds(170, 290, 47, 23);
        getContentPane().add(blank10);

        blank9.setBounds(121, 290, 47, 23);
        getContentPane().add(blank9);

        btnE.setBounds(219, 290, 47, 23);
        getContentPane().add(btnE);
        btnE.addActionListener(this);

        btnnum1.setBounds(268, 290, 47, 23);
        getContentPane().add(btnnum1);
        btnnum1.addActionListener(this);

        btnnum2.setBounds(317, 290, 47, 23);
        getContentPane().add(btnnum2);
        btnnum2.addActionListener(this);

        btnnum3.setBounds(366, 290, 47, 23);
        getContentPane().add(btnnum3);
        btnnum3.addActionListener(this);

        btnminus.setBounds(415, 290, 47, 23);
        getContentPane().add(btnminus);
        btnminus.addActionListener(this);


        blank12.setBounds(170, 323, 47, 23);
        getContentPane().add(blank12);

        blank11.setBounds(121, 323, 47, 23);
        getContentPane().add(blank11);

        btnF.setBounds(219, 323, 47, 23);
        getContentPane().add(btnF);
        btnF.addActionListener(this);

        btnnum0.setBounds(268, 323, 94, 23);
        getContentPane().add(btnnum0);
        btnnum0.addActionListener(this);

        btndec.setBounds(366, 323, 47, 23);
        getContentPane().add(btndec);

        btnplus.setBounds(415, 323, 47, 23);
        getContentPane().add(btnplus);
        btnplus.addActionListener(this);

        btnM_1.setBounds(465, 157, 47, 23);
        getContentPane().add(btnM_1);

        btnsqr.setBounds(465, 190, 47, 23);
        getContentPane().add(btnsqr);

        btnmod.setBounds(465, 224, 47, 23);
        getContentPane().add(btnmod);

        btnI.setBounds(465, 258, 47, 23);
        getContentPane().add(btnI);
        btnI.addActionListener(this);

        btnEqual.setBounds(465, 290, 47, 56);
        getContentPane().add(btnEqual);
        btnEqual.addActionListener(this);

        JButton btnempty = new JButton("");
        btnempty.setBounds(465, 260, 47, 23);
        getContentPane().add(btnempty);

    }

   // Current setting is hex/dec/bin/oct. Tempnum is the number being entered at the time. Same goes for tempHex and octalOne. To solve hex and binary, read in as string then convert to dec do math and convert back. For octal convert change base to 10 do math then back to 8.
    public void actionPerformed(ActionEvent e) {

        if (e.getSource() == btnEqual) {
            switch (tempOper[0]) {
                case 1:
                    if (currentSetting[0] == 1) {
                        tempNumOne[0] = hextodec.convert(numOneHex[0]);
                        tempNumTwo[0] = hextodec.convert(numTwoHex[0]);
                        tempEqual[0] = tempNumOne[0] + tempNumTwo[0];
                        textArea.setText(dectohex.convert(tempEqual[0]));
                        tempNumOne[0] = -1;
                        tempNumTwo[0] = -1;
                        tempOper[0] = 0;
                        numOneHex[0] = "";
                        numTwoHex[0] = "";
                    }

                    if (currentSetting[0] == 2) { // use decimal so just add
                        tempEqual[0] = tempNumOne[0] + tempNumTwo[0];
                        textArea.setText(tempEqual[0] + "");
                        tempNumOne[0] = -1;
                        tempNumTwo[0] = -1;
                        tempOper[0] = 0;
                    }

                    if (currentSetting[0] == 3) {
                        tempNumOne[0] = octtodec.convert(octalOne[0]);
                        tempNumTwo[0] = octtodec.convert(octalTwo[0]);
                        tempEqual[0] = tempNumOne[0] + tempNumTwo[0];
                        textArea.setText(dectooct.convert(tempEqual[0]) + "");
                        tempNumOne[0] = -1;
                        tempNumTwo[0] = -1;
                        tempOper[0] = 0;
                        octalOne[0] = -1;
                        octalTwo[0] = -1;
                    }

                    if (currentSetting[0] == 4) {
                        String binStringOne = "";
                        String binStringTwo = "";
                        String binEqual = "";
                        for (int i = 0; i < binOneArray.size(); i ++) {
                            binStringOne = binStringOne + binOneArray.get(i);
                        }
                        for (int i = 0; i < binTwoArray.size(); i++ ) {
                            binStringTwo = binStringTwo + binTwoArray.get(i);
                        }
                        tempNumOne[0] = bintodec.convert(binStringOne);
                        tempNumTwo[0] = bintodec.convert(binStringTwo);

                        tempEqual[0] = tempNumTwo[0] + tempNumOne[0];
                        binEqual = dectobin.convert(tempEqual[0]);
                        textArea.setText(binEqual);

                        tempNumOne[0] = -1;
                        tempNumTwo[0] = -1;
                        tempOper[0] = 0;
                        binTwoArray.clear();
                        binOneArray.clear();
                        binEqual = "";

                    }
                    break;
                case 2:
                    if (currentSetting[0] == 1) { // convert to decimal add then back to hex and print
                        tempNumOne[0] = hextodec.convert(numOneHex[0]);
                        tempNumTwo[0] = hextodec.convert(numTwoHex[0]);
                        tempEqual[0] = tempNumOne[0] - tempNumTwo[0];
                        textArea.setText(dectohex.convert(tempEqual[0]));
                        tempNumOne[0] = -1;
                        tempNumTwo[0] = -1;
                        tempOper[0] = 0;
                        numOneHex[0] = "";
                        numTwoHex[0] = "";
                    }

                    if (currentSetting[0] == 2) {
                        tempEqual[0] = tempNumOne[0] - tempNumTwo[0];
                        textArea.setText(tempEqual[0] + "");
                        tempNumOne[0] = -1;
                        tempNumTwo[0] = -1;
                        tempOper[0] = 0;
                    }

                    if (currentSetting[0] == 3) {
                        tempNumOne[0] = octtodec.convert(octalOne[0]);
                        tempNumTwo[0] = octtodec.convert(octalTwo[0]);
                        tempEqual[0] = tempNumOne[0] - tempNumTwo[0];
                        textArea.setText(dectooct.convert(tempEqual[0]) + "");
                        tempNumOne[0] = -1;
                        tempNumTwo[0] = -1;
                        tempOper[0] = 0;
                        octalOne[0] = -1;
                        octalTwo[0] = -1;
                    }
                    ///
                    if (currentSetting[0] == 4) {
                        String binStringOne = "";
                        String binStringTwo = "";
                        String binEqual = "";
                        for (int i = 0; i < binOneArray.size(); i ++) {
                            binStringOne = binStringOne + binOneArray.get(i);
                        }
                        for (int i = 0; i < binTwoArray.size(); i++ ) {
                            binStringTwo = binStringTwo + binTwoArray.get(i);
                        }
                        tempNumOne[0] = bintodec.convert(binStringOne);
                        tempNumTwo[0] = bintodec.convert(binStringTwo);

                        tempEqual[0] = tempNumOne[0] - tempNumTwo[0];
                        binEqual = dectobin.convert(tempEqual[0]);
                        textArea.setText(binEqual);

                        tempNumOne[0] = -1;
                        tempNumTwo[0] = -1;
                        tempOper[0] = 0;
                        binTwoArray.clear();
                        binOneArray.clear();
                        binEqual = "";

                    }
                    break;
                case 3:
                    if (currentSetting[0] == 1) { // convert to decimal add then back to hex and print
                        tempNumOne[0] = hextodec.convert(numOneHex[0]);
                        tempNumTwo[0] = hextodec.convert(numTwoHex[0]);
                        tempEqual[0] = tempNumOne[0] * tempNumTwo[0];
                        textArea.setText(dectohex.convert(tempEqual[0]));
                        tempNumOne[0] = -1;
                        tempNumTwo[0] = -1;
                        tempOper[0] = 0;
                        numOneHex[0] = "";
                        numTwoHex[0] = "";
                    }

                    if (currentSetting[0] == 2) {
                        tempEqual[0] = tempNumOne[0] * tempNumTwo[0];
                        textArea.setText(tempEqual[0] + "");
                        tempNumOne[0] = -1;
                        tempNumTwo[0] = -1;
                        tempOper[0] = 0;
                    }

                    if (currentSetting[0] == 3) {
                        tempNumOne[0] = octtodec.convert(octalOne[0]);
                        tempNumTwo[0] = octtodec.convert(octalTwo[0]);
                        tempEqual[0] = tempNumOne[0] * tempNumTwo[0];
                        textArea.setText(dectooct.convert(tempEqual[0]) + "");
                        tempNumOne[0] = -1;
                        tempNumTwo[0] = -1;
                        tempOper[0] = 0;
                        octalOne[0] = -1;
                        octalTwo[0] = -1;
                    }

                    if (currentSetting[0] == 4) {
                        String binStringOne = "";
                        String binStringTwo = "";
                        String binEqual = "";
                        for (int i = 0; i < binOneArray.size(); i ++) {
                            binStringOne = binStringOne + binOneArray.get(i);
                        }
                        for (int i = 0; i < binTwoArray.size(); i++ ) {
                            binStringTwo = binStringTwo + binTwoArray.get(i);
                        }
                        tempNumOne[0] = bintodec.convert(binStringOne);
                        tempNumTwo[0] = bintodec.convert(binStringTwo);

                        tempEqual[0] = tempNumOne[0] * tempNumTwo[0];
                        binEqual = dectobin.convert(tempEqual[0]);
                        textArea.setText(binEqual);

                        tempNumOne[0] = -1;
                        tempNumTwo[0] = -1;
                        tempOper[0] = 0;
                        binTwoArray.clear();
                        binOneArray.clear();
                        binEqual = "";

                    }
                    break;
                case 4:
                    if (currentSetting[0] == 1) { // convert to decimal add then back to hex and print
                        tempNumOne[0] = hextodec.convert(numOneHex[0]);
                        tempNumTwo[0] = hextodec.convert(numTwoHex[0]);
                        tempEqual[0] = tempNumOne[0] / tempNumTwo[0];
                        textArea.setText(dectohex.convert(tempEqual[0]));
                        tempNumOne[0] = -1;
                        tempNumTwo[0] = -1;
                        tempOper[0] = 0;
                        numOneHex[0] = "";
                        numTwoHex[0] = "";
                    }

                    if (currentSetting[0] == 2) {
                        tempEqual[0] = tempNumOne[0] / tempNumTwo[0];
                        textArea.setText(tempEqual[0] + "");
                        tempNumOne[0] = -1;
                        tempNumTwo[0] = -1;
                        tempOper[0] = 0;
                    }

                    if (currentSetting[0] == 3) {
                        tempNumOne[0] = octtodec.convert(octalOne[0]);
                        tempNumTwo[0] = octtodec.convert(octalTwo[0]);
                        tempEqual[0] = tempNumOne[0] / tempNumTwo[0];
                        textArea.setText(dectooct.convert(tempEqual[0]) + "");
                        tempNumOne[0] = -1;
                        tempNumTwo[0] = -1;
                        tempOper[0] = 0;
                        octalOne[0] = -1;
                        octalTwo[0] = -1;
                    }

                    if (currentSetting[0] == 4) {
                        String binStringOne = "";
                        String binStringTwo = "";
                        String binEqual = "";
                        for (int i = 0; i < binOneArray.size(); i ++) {
                            binStringOne = binStringOne + binOneArray.get(i);
                        }
                        for (int i = 0; i < binTwoArray.size(); i++ ) {
                            binStringTwo = binStringTwo + binTwoArray.get(i);
                        }
                        tempNumOne[0] = bintodec.convert(binStringOne);
                        tempNumTwo[0] = bintodec.convert(binStringTwo);

                        tempEqual[0] = tempNumOne[0] / tempNumTwo[0];
                        binEqual = dectobin.convert(tempEqual[0]);
                        textArea.setText(binEqual);

                        tempNumOne[0] = -1;
                        tempNumTwo[0] = -1;
                        tempOper[0] = 0;
                        binTwoArray.clear();
                        binOneArray.clear();
                        binEqual = "";

                    }
                    break;
            }

            if (currentSetting[0] == 1) {
                StringBuilder hexBuilder = new StringBuilder(sizeOfIntInHalfBytes);
                hexBuilder.setLength(sizeOfIntInHalfBytes);
                for (int i = sizeOfIntInHalfBytes - 1; i >= 0; --i) {
                    int j = tempEqual[0] & halfByte;
                    hexBuilder.setCharAt(i, hexDigits[j]);
                    tempEqual[0] >>= numberOfBitsInAHalfByte;
                }

                textArea.setText(hexBuilder.toString());
            }
        }

        if (e.getSource() == btnplus) {
            tempOper[0] = 1;
        }

        if (e.getSource() == btnnum0) {

            if (currentSetting[0] == 1) {
                if (tempOper[0] > 0) {
                    numTwoHex[0] = numTwoHex[0] + "0";
                    textArea.setText(numTwoHex[0]);
                } else {
                    numOneHex[0] = numOneHex[0] + "0";
                    textArea.setText(numOneHex[0]);
                }
            }

            if (currentSetting[0] == 2) {
                if (tempOper[0] > 0) {
                    if (tempNumTwo[0] == -1) {
                        tempNumTwo[0] = 0;
                        textArea.setText(tempNumTwo[0] + "");
                    } else {
                        tempNumTwo[0] = tempNumTwo[0] * 10;
                        tempNumTwo[0] = tempNumTwo[0] + 0;
                        textArea.setText(tempNumTwo[0] + "");
                    }

                }
                if (tempNumOne[0] == -1) {
                    tempNumOne[0] = 0;
                    textArea.setText(tempNumOne[0] + "");
                } else if (tempNumOne[0] != -1 && tempOper[0] == 0) {
                    tempNumOne[0] = tempNumOne[0] * 10;
                    tempNumOne[0] = tempNumOne[0] + 0;
                    textArea.setText(tempNumOne[0] + "");
                }
            }

            if (currentSetting[0] == 3) {
                if (tempOper[0] > 0) {
                    if (octalTwo[0] == -1) {
                        octalTwo[0] = 0;
                        textArea.setText(octalTwo[0] + "");
                    } else if (octalTwo[0] != -1) {
                        octalTwo[0] = octalTwo[0] * 10;
                        octalTwo[0] += 0;
                        textArea.setText(octalTwo[0] + "");
                    }

                }
                if (octalOne[0] == -1) {
                    octalOne[0] = 0;
                    textArea.setText(octalOne[0] + "");
                } else if (octalOne[0] != -1 && tempOper[0] == 0) {
                    octalOne[0] = octalOne[0] * 10;
                    octalOne[0] += 0;
                    textArea.setText(octalOne[0] + "");
                }
            }

            if (currentSetting[0] == 4) {

                if (tempOper[0] == 0) {
                    binOneArray.add("0");
                    String currentText = "";
                    for (int i = 0; i < binOneArray.size(); i++) {
                        currentText = currentText + binOneArray.get(i);
                    }
                    textArea.setText(currentText);

                }
                if (tempOper[0] > 0) {
                    binTwoArray.add("0");
                    String currentText = "";
                    for (int i = 0; i < binTwoArray.size(); i++) {
                        currentText = currentText + binTwoArray.get(i);
                    }
                    textArea.setText(currentText);
                }
            }
        }

        if (e.getSource() == btnminus) {
            tempOper[0] = 2;
        }

        if (e.getSource() == btnnum3) {
            lastEntry[0] = 3;
            tempEqual[0] = -1;

            if (currentSetting[0] == 1) {
                if (tempOper[0] > 0) {
                    numTwoHex[0] = numTwoHex[0] + "3";
                    textArea.setText(numTwoHex[0]);
                } else {
                    numOneHex[0] = numOneHex[0] + "3";
                    textArea.setText(numOneHex[0]);
                }
            }

            if (currentSetting[0] == 2) {
                if (tempOper[0] > 0) {
                    if (tempNumTwo[0] == -1) {
                        tempNumTwo[0] = 3;
                        textArea.setText(tempNumTwo[0] + "");
                    } else {
                        tempNumTwo[0] = tempNumTwo[0] * 10;
                        tempNumTwo[0] = tempNumTwo[0] + 3;
                        textArea.setText(tempNumTwo[0] + "");
                    }

                }
                if (tempNumOne[0] == -1) {
                    tempNumOne[0] = 3;
                    textArea.setText(tempNumOne[0] + "");
                } else if (tempNumOne[0] != -1 && tempOper[0] == 0) {
                    tempNumOne[0] = tempNumOne[0] * 10;
                    tempNumOne[0] = tempNumOne[0] + 3;
                    textArea.setText(tempNumOne[0] + "");
                }
            }

            if (currentSetting[0] == 3) {
                if (tempOper[0] > 0) {
                    if (octalTwo[0] == -1) {
                        octalTwo[0] = 3;
                        textArea.setText(octalTwo[0] + "");
                    } else if (octalTwo[0] != -1) {
                        octalTwo[0] = octalTwo[0] * 10;
                        octalTwo[0] += 3;
                        textArea.setText(octalTwo[0] + "");
                    }

                }
                if (octalOne[0] == -1) {
                    octalOne[0] = 3;
                    textArea.setText(octalOne[0] + "");
                } else if (octalOne[0] != -1 && tempOper[0] == 0) {
                    octalOne[0] = octalOne[0] * 10;
                    octalOne[0] += 3;
                    textArea.setText(octalOne[0] + "");
                }
            }
        }

        if (e.getSource() == btnmult) {
            tempOper[0] = 3;
        }

        if (e.getSource() == btnnum2) {
            lastEntry[0] = 2;
            tempEqual[0] = -1;

            if (currentSetting[0] == 1) {
                if (tempOper[0] > 0) {
                    numTwoHex[0] = numTwoHex[0] + "2";
                    textArea.setText(numTwoHex[0]);
                } else {
                    numOneHex[0] = numOneHex[0] + "2";
                    textArea.setText(numOneHex[0]);
                }
            }

            if (currentSetting[0] == 2) {
                if (tempOper[0] > 0) {
                    if (tempNumTwo[0] == -1) {
                        tempNumTwo[0] = 2;
                        textArea.setText(tempNumTwo[0] + "");
                    } else {
                        tempNumTwo[0] = tempNumTwo[0] * 10;
                        tempNumTwo[0] = tempNumTwo[0] + 2;
                        textArea.setText(tempNumTwo[0] + "");
                    }

                }
                if (tempNumOne[0] == -1) {
                    tempNumOne[0] = 2;
                    textArea.setText(tempNumOne[0] + "");
                } else if (tempNumOne[0] != -1 && tempOper[0] == 0) {
                    tempNumOne[0] = tempNumOne[0] * 10;
                    tempNumOne[0] = tempNumOne[0] + 2;
                    textArea.setText(tempNumOne[0] + "");
                }
            }

            if (currentSetting[0] == 3) {
                if (tempOper[0] > 0) {
                    if (octalTwo[0] == -1) {
                        octalTwo[0] = 2;
                        textArea.setText(octalTwo[0] + "");
                    } else if (octalTwo[0] != -1) {
                        octalTwo[0] = octalTwo[0] * 10;
                        octalTwo[0] += 2;
                        textArea.setText(octalTwo[0] + "");
                    }

                }
                if (octalOne[0] == -1) {
                    octalOne[0] = 2;
                    textArea.setText(octalOne[0] + "");
                } else if (octalOne[0] != -1 && tempOper[0] == 0) {
                    octalOne[0] = octalOne[0] * 10;
                    octalOne[0] += 2;
                    textArea.setText(octalOne[0] + "");
                }
            }
        }

        if (e.getSource() == btnnum1) {
            lastEntry[0] = 1;
            tempEqual[0] = -1;

            if (currentSetting[0] == 1) {
                if (tempOper[0] > 0) {
                    numTwoHex[0] = numTwoHex[0] + "1";
                    textArea.setText(numTwoHex[0]);
                } else {
                    numOneHex[0] = numOneHex[0] + "1";
                    textArea.setText(numOneHex[0]);
                }
            }

            if (currentSetting[0] == 2) {
                if (tempOper[0] > 0) {
                    if (tempNumTwo[0] == -1) {
                        tempNumTwo[0] = 1;
                        textArea.setText(tempNumTwo[0] + "");
                    } else {
                        tempNumTwo[0] = tempNumTwo[0] * 10;
                        tempNumTwo[0] = tempNumTwo[0] + 1;
                        textArea.setText(tempNumTwo[0] + "");
                    }

                }
                if (tempNumOne[0] == -1) {
                    tempNumOne[0] = 1;
                    textArea.setText(tempNumOne[0] + "");
                } else if (tempNumOne[0] != -1 && tempOper[0] == 0) {
                    tempNumOne[0] = tempNumOne[0] * 10;
                    tempNumOne[0] = tempNumOne[0] + 1;
                    textArea.setText(tempNumOne[0] + "");
                }
            }

            if (currentSetting[0] == 3) {
                if (tempOper[0] > 0) {
                    if (octalTwo[0] == -1) {
                        octalTwo[0] = 1;
                        textArea.setText(octalTwo[0] + "");
                    } else if (octalTwo[0] != -1) {
                        octalTwo[0] = octalTwo[0] * 10;
                        octalTwo[0] += 1;
                        textArea.setText(octalTwo[0] + "");
                    }

                }
                if (octalOne[0] == -1) {
                    octalOne[0] = 1;
                    textArea.setText(octalOne[0] + "");
                } else if (octalOne[0] != -1 && tempOper[0] == 0) {
                    octalOne[0] = octalOne[0] * 10;
                    octalOne[0] += 1;
                    textArea.setText(octalOne[0] + "");
                }
            }

            if (currentSetting[0] == 4) {

                if (tempOper[0] == 0) {
                    binOneArray.add("1");
                    String currentText = "";
                    for (int i = 0; i < binOneArray.size(); i++) {
                        currentText = currentText + binOneArray.get(i);
                    }
                    textArea.setText(currentText);

                }
                if (tempOper[0] > 0) {
                    binTwoArray.add("1");
                    String currentText = "";
                    for (int i = 0; i < binTwoArray.size(); i++) {
                        currentText = currentText + binTwoArray.get(i);
                    }
                    textArea.setText(currentText);
                }
            }

        }

        if (e.getSource() == btnnum6) {
            lastEntry[0] = 6;
            tempEqual[0] = -1;

            if (currentSetting[0] == 1) {
                if (tempOper[0] > 0) {
                    numTwoHex[0] = numTwoHex[0] + "6";
                    textArea.setText(numTwoHex[0]);
                } else {
                    numOneHex[0] = numOneHex[0] + "6";
                    textArea.setText(numOneHex[0]);
                }
            }

            if (currentSetting[0] == 2) {
                if (tempOper[0] > 0) {
                    if (tempNumTwo[0] == -1) {
                        tempNumTwo[0] = 6;
                        textArea.setText(tempNumTwo[0] + "");
                    } else {
                        tempNumTwo[0] = tempNumTwo[0] * 10;
                        tempNumTwo[0] = tempNumTwo[0] + 6;
                        textArea.setText(tempNumTwo[0] + "");
                    }
                }


                if (tempNumOne[0] == -1) {
                    tempNumOne[0] = 6;
                    textArea.setText(tempNumOne[0] + "");
                } else if (tempNumOne[0] != -1 && tempOper[0] == 0) {
                    tempNumOne[0] = tempNumOne[0] * 10;
                    tempNumOne[0] = tempNumOne[0] + 6;
                    textArea.setText(tempNumOne[0] + "");
                }
            }

            if (currentSetting[0] == 3) {
                if (tempOper[0] > 0) {
                    if (octalTwo[0] == -1) {
                        octalTwo[0] = 6;
                        textArea.setText(octalTwo[0] + "");
                    } else if (octalTwo[0] != -1) {
                        octalTwo[0] = octalTwo[0] * 10;
                        octalTwo[0] += 6;
                        textArea.setText(octalTwo[0] + "");
                    }

                }
                if (octalOne[0] == -1) {
                    octalOne[0] = 6;
                    textArea.setText(octalOne[0] + "");
                } else if (octalOne[0] != -1 && tempOper[0] == 0) {
                    octalOne[0] = octalOne[0] * 10;
                    octalOne[0] += 6;
                    textArea.setText(octalOne[0] + "");
                }
            }
        }

        if (e.getSource() == btnnum5) {
            lastEntry[0] = 5;
            tempEqual[0] = -1;

            if (currentSetting[0] == 1) {
                if (tempOper[0] > 0) {
                    numTwoHex[0] = numTwoHex[0] + "5";
                    textArea.setText(numTwoHex[0]);
                } else {
                    numOneHex[0] = numOneHex[0] + "5";
                    textArea.setText(numOneHex[0]);
                }
            }

            if (currentSetting[0] == 2) {
                if (tempOper[0] > 0) {
                    if (tempNumTwo[0] == -1) {
                        tempNumTwo[0] = 5;
                        textArea.setText(tempNumTwo[0] + "");
                    } else {
                        tempNumTwo[0] = tempNumTwo[0] * 10;
                        tempNumTwo[0] = tempNumTwo[0] + 5;
                        textArea.setText(tempNumTwo[0] + "");
                    }
                }

                if (tempNumOne[0] == -1) {
                    tempNumOne[0] = 5;
                    textArea.setText(tempNumOne[0] + "");
                } else if (tempNumOne[0] != -1 && tempOper[0] == 0) {
                    tempNumOne[0] = tempNumOne[0] * 10;
                    tempNumOne[0] = tempNumOne[0] + 5;
                    textArea.setText(tempNumOne[0] + "");
                }
            }

            if (currentSetting[0] == 3) {
                if (tempOper[0] > 0) {
                    if (octalTwo[0] == -1) {
                        octalTwo[0] = 5;
                        textArea.setText(octalTwo[0] + "");
                    } else if (octalTwo[0] != -1) {
                        octalTwo[0] = octalTwo[0] * 10;
                        octalTwo[0] += 5;
                        textArea.setText(octalTwo[0] + "");
                    }

                }
                if (octalOne[0] == -1) {
                    octalOne[0] = 5;
                    textArea.setText(octalOne[0] + "");
                } else if (octalOne[0] != -1 && tempOper[0] == 0) {
                    octalOne[0] = octalOne[0] * 10;
                    octalOne[0] += 5;
                    textArea.setText(octalOne[0] + "");
                }
            }
        }

        if (e.getSource() == btnnum4) {
            lastEntry[0] = 4;
            tempEqual[0] = -1;

            if (currentSetting[0] == 1) {
                if (tempOper[0] > 0) {
                    numTwoHex[0] = numTwoHex[0] + "4";
                    textArea.setText(numTwoHex[0]);
                } else {
                    numOneHex[0] = numOneHex[0] + "4";
                    textArea.setText(numOneHex[0]);
                }
            }

            if (currentSetting[0] == 2) {
                if (tempOper[0] > 0) {
                    if (tempNumTwo[0] == -1) {
                        tempNumTwo[0] = 4;
                        textArea.setText(tempNumTwo[0] + "");
                    } else {
                        tempNumTwo[0] = tempNumTwo[0] * 10;
                        tempNumTwo[0] = tempNumTwo[0] + 4;
                        textArea.setText(tempNumTwo[0] + "");
                    }
                }

                if (tempNumOne[0] == -1) {
                    tempNumOne[0] = 4;
                    textArea.setText(tempNumOne[0] + "");
                } else if (tempNumOne[0] != -1 && tempOper[0] == 0) {
                    tempNumOne[0] = tempNumOne[0] * 10;
                    tempNumOne[0] = tempNumOne[0] + 4;
                    textArea.setText(tempNumOne[0] + "");
                }
            }

            if (currentSetting[0] == 3) {
                if (tempOper[0] > 0) {
                    if (octalTwo[0] == -1) {
                        octalTwo[0] = 4;
                        textArea.setText(octalTwo[0] + "");
                    } else if (octalTwo[0] != -1) {
                        octalTwo[0] = octalTwo[0] * 10;
                        octalTwo[0] += 4;
                        textArea.setText(octalTwo[0] + "");
                    }

                }
                if (octalOne[0] == -1) {
                    octalOne[0] = 4;
                    textArea.setText(octalOne[0] + "");
                } else if (octalOne[0] != -1 && tempOper[0] == 0) {
                    octalOne[0] = octalOne[0] * 10;
                    octalOne[0] += 4;
                    textArea.setText(octalOne[0] + "");
                }
            }
        }

        if (e.getSource() == btndiv) {
            tempOper[0] = 4;
        }

        if (e.getSource() == btnnum9) {
            lastEntry[0] = 9;
            tempEqual[0] = -1;

            if (currentSetting[0] == 1) {
                if (tempOper[0] > 0) {
                    numTwoHex[0] = numTwoHex[0] + "9";
                    textArea.setText(numTwoHex[0]);
                } else {
                    numOneHex[0] = numOneHex[0] + "9";
                    textArea.setText(numOneHex[0]);
                }
            }

            if (currentSetting[0] == 2) {
                if (tempOper[0] > 0) {
                    if (tempNumTwo[0] == -1) {
                        tempNumTwo[0] = 9;
                        textArea.setText(tempNumTwo[0] + "");
                    } else {
                        tempNumTwo[0] = tempNumTwo[0] * 10;
                        tempNumTwo[0] = tempNumTwo[0] + 9;
                        textArea.setText(tempNumTwo[0] + "");
                    }
                }

                if (tempNumOne[0] == -1) {
                    tempNumOne[0] = 9;
                    textArea.setText(tempNumOne[0] + "");
                } else if (tempNumOne[0] != -1 && tempOper[0] == 0) {
                    tempNumOne[0] = tempNumOne[0] * 10;
                    tempNumOne[0] = tempNumOne[0] + 9;
                    textArea.setText(tempNumOne[0] + "");
                }
            }
        }

        if (e.getSource() == btnnum8) {
            lastEntry[0] = 8;
            tempEqual[0] = -1;

            if (currentSetting[0] == 1) {
                if (tempOper[0] > 0) {
                    numTwoHex[0] = numTwoHex[0] + "8";
                    textArea.setText(numTwoHex[0]);
                } else {
                    numOneHex[0] = numOneHex[0] + "8";
                    textArea.setText(numOneHex[0]);
                }
            }

            if (currentSetting[0] == 2) {
                if (tempOper[0] > 0) {
                    if (tempNumTwo[0] == -1) {
                        tempNumTwo[0] = 8;
                        textArea.setText(tempNumTwo[0] + "");
                    } else {
                        tempNumTwo[0] = tempNumTwo[0] * 10;
                        tempNumTwo[0] = tempNumTwo[0] + 8;
                        textArea.setText(tempNumTwo[0] + "");
                    }
                }

                if (tempNumOne[0] == -1) {
                    tempNumOne[0] = 8;
                    textArea.setText(tempNumOne[0] + "");
                } else if (tempNumOne[0] != -1 && tempOper[0] == 0) {
                    tempNumOne[0] = tempNumOne[0] * 10;
                    tempNumOne[0] = tempNumOne[0] + 8;
                    textArea.setText(tempNumOne[0] + "");
                }
            }
        }

        if (e.getSource() == btnnum7) {
            lastEntry[0] = 7;
            tempEqual[0] = -1;

            if (currentSetting[0] == 1) {
                if (tempOper[0] > 0) {
                    numTwoHex[0] = numTwoHex[0] + "7";
                    textArea.setText(numTwoHex[0]);
                } else {
                    numOneHex[0] = numOneHex[0] + "7";
                    textArea.setText(numOneHex[0]);
                }
            }

            if (currentSetting[0] == 2) {
                if (tempOper[0] > 0) {
                    if (tempNumTwo[0] == -1) {
                        tempNumTwo[0] = 7;
                        textArea.setText(tempNumTwo[0] + "");
                    } else {
                        tempNumTwo[0] = tempNumTwo[0] * 10;
                        tempNumTwo[0] = tempNumTwo[0] + 7;
                        textArea.setText(tempNumTwo[0] + "");
                    }
                }

                if (tempNumOne[0] == -1) {
                    tempNumOne[0] = 7;
                    textArea.setText(tempNumOne[0] + "");
                } else if (tempNumOne[0] != -1 && tempOper[0] == 0) {
                    tempNumOne[0] = tempNumOne[0] * 10;
                    tempNumOne[0] = tempNumOne[0] + 7;
                    textArea.setText(tempNumOne[0] + "");
                }
            }

            if (currentSetting[0] == 3) {
                if (tempOper[0] > 0) {
                    if (octalTwo[0] == -1) {
                        octalTwo[0] = 7;
                        textArea.setText(octalTwo[0] + "");
                    } else if (octalTwo[0] != -1) {
                        octalTwo[0] = octalTwo[0] * 10;
                        octalTwo[0] += 7;
                        textArea.setText(octalTwo[0] + "");
                    }

                }
                if (octalOne[0] == -1) {
                    octalOne[0] = 7;
                    textArea.setText(octalOne[0] + "");
                } else if (octalOne[0] != -1 && tempOper[0] == 0) {
                    octalOne[0] = octalOne[0] * 10;
                    octalOne[0] += 7;
                    textArea.setText(octalOne[0] + "");
                }
            }
        }

        if (e.getSource() == btnC) {
            textArea.setText(0 + "");
            tempNumOne[0] = -1;
            tempNumTwo[0] = -1;
            tempEqual[0] = -1;
            tempOper[0] = 0;
            binTwoArray.clear();
            binOneArray.clear();
            octalOne[0] = -1;
            octalTwo[0] = -1;
            numOneHex[0] = "";
            numTwoHex[0] = "";

        }

        if (e.getSource() == btnCe) {
            if (lastEntry[0] != -1) {
                if (tempOper[0] == 0) {
                    tempNumOne[0] = -1;
                    textArea.setText(0 + "");
                    binOneArray.clear();
                    octalOne[0] = -1;
                    numOneHex[0] = "";
                } else {
                    tempNumTwo[0] = -1;
                    textArea.setText(0 + "");
                    binTwoArray.clear();
                    octalTwo[0] = -1;
                    numTwoHex[0] = "";
                }
            }
        }

        if (e.getSource() == rdbtnHex) {
            currentSetting[0] = 1;
            rdbtnHex.setSelected(true);
            rdbtnDec.setSelected(false);
            rdbtnOct.setSelected(false);
            rdbtnBin.setSelected(false);

            if (tempOper[0] == 0 && tempNumOne[0] != -1) { // first num
                StringBuilder hexBuilder = new StringBuilder(sizeOfIntInHalfBytes);
                hexBuilder.setLength(sizeOfIntInHalfBytes);
                for (int i = sizeOfIntInHalfBytes - 1; i >= 0; --i) {
                    int j = tempNumOne[0] & halfByte;
                    hexBuilder.setCharAt(i, hexDigits[j]);
                    tempNumOne[0] >>= numberOfBitsInAHalfByte;
                }
                textArea.setText(hexBuilder.toString());
            } else if (tempNumTwo[0] != -1 && tempEqual[0] == -1) { // second num

                StringBuilder hexBuilder = new StringBuilder(sizeOfIntInHalfBytes);
                hexBuilder.setLength(sizeOfIntInHalfBytes);
                for (int i = sizeOfIntInHalfBytes - 1; i >= 0; --i) {
                    int j = tempNumTwo[0] & halfByte;
                    hexBuilder.setCharAt(i, hexDigits[j]);
                    tempNumTwo[0] >>= numberOfBitsInAHalfByte;
                }
                textArea.setText(hexBuilder.toString());

            } else { // equals num
                StringBuilder hexBuilder = new StringBuilder(sizeOfIntInHalfBytes);
                hexBuilder.setLength(sizeOfIntInHalfBytes);
                for (int i = sizeOfIntInHalfBytes - 1; i >= 0; --i) {
                    int j = tempEqual[0] & halfByte;
                    hexBuilder.setCharAt(i, hexDigits[j]);
                    tempEqual[0] >>= numberOfBitsInAHalfByte;
                }

                textArea.setText(hexBuilder.toString());
            }
            previousSetting[0] = 1;
        }

        if (e.getSource() == rdbtnDec) {
            currentSetting[0] = 2;

            rdbtnHex.setSelected(false);
            rdbtnDec.setSelected(true);
            rdbtnOct.setSelected(false);
            rdbtnBin.setSelected(false);

            previousSetting[0] = 2;
        }

        if (e.getSource() == rdbtnOct) {
            currentSetting[0] = 3;
            rdbtnHex.setSelected(false);
            rdbtnDec.setSelected(false);
            rdbtnOct.setSelected(true);
            rdbtnBin.setSelected(false);

            previousSetting[0] = 3;
        }

        if (e.getSource() == rdbtnBin) {
            currentSetting[0] = 4;
            rdbtnHex.setSelected(false);
            rdbtnDec.setSelected(false);
            rdbtnOct.setSelected(false);
            rdbtnBin.setSelected(true);

            if (previousSetting[0] == 2) {
                if (tempOper[0] == 0 && tempNumOne[0] != -1) { // first num

                } else if (tempNumTwo[0] != -1 && tempEqual[0] == -1) { // second num


                } else { // equals num

                }
            }

            previousSetting[0] = 4;
        }

        if (e.getSource() == btnbs) {

            if (currentSetting[0] == 1) {

                if (tempOper[0] == 0) {
                    numOneHex[0] = numOneHex[0].substring(0, numOneHex[0].length()-1);
                    textArea.setText(numOneHex[0]);
                } else{
                    numTwoHex[0] = numTwoHex[0].substring(0, numTwoHex[0].length()-1);
                    textArea.setText(numTwoHex[0]);
                }
            }

            if (currentSetting[0] == 2) {
                if (tempOper[0] == 0 && tempNumOne[0] != -1) {
                    if (tempNumOne[0] >= 10) {
                        tempNumOne[0] = tempNumOne[0] - lastEntry[0];
                        tempNumOne[0] = tempNumOne[0] / 10;
                        textArea.setText(tempNumOne[0] + "");
                    } else {
                        tempNumOne[0] = 0;
                        textArea.setText(tempNumOne[0] + "");
                    }
                } else if (tempOper[0] != 0 && tempNumTwo[0] != -1) {
                    if (tempNumTwo[0] >= 10 && tempOper[0] != 0) {
                        tempNumTwo[0] = tempNumTwo[0] - lastEntry[0];
                        tempNumTwo[0] = tempNumTwo[0] / 10;
                        textArea.setText(tempNumTwo[0] + "");
                    } else {
                        tempNumTwo[0] = 0;
                        textArea.setText(tempNumTwo[0] + "");
                    }
                }
            }

            if (currentSetting[0] == 3) {
                if (tempOper[0] == 0 && octalOne[0] != -1) {
                    if (octalOne[0] >= 10) {
                        octalOne[0] = octalOne[0] - lastEntry[0];
                        octalOne[0] = octalOne[0] / 10;
                        textArea.setText(octalOne[0] + "");
                    } else {
                        octalOne[0] = 0;
                        textArea.setText(octalOne[0] + "");
                    }
                } else if (tempOper[0] != 0 && octalTwo[0] != -1) {
                    if (octalTwo[0] >= 10 && tempOper[0] != 0) {
                        octalTwo[0] = octalTwo[0] - lastEntry[0];
                        octalTwo[0] = octalTwo[0] / 10;
                        textArea.setText(octalTwo[0] + "");
                    } else {
                        octalTwo[0] = 0;
                        textArea.setText(octalTwo[0] + "");
                    }
                }
            }

            if (currentSetting[0] == 4) {

                if (tempOper[0] == 0) {
                    binOneArray.remove(binOneArray.size() - 1);
                    String binStringOne = "";
                    for (int i = 0; i < binOneArray.size(); i ++) {
                        binStringOne = binStringOne + binOneArray.get(i);
                    }
                    textArea.setText(binStringOne);
                } else{
                    binTwoArray.remove(binTwoArray.size() - 1);
                    String binStringOne = "";
                    for (int i = 0; i < binTwoArray.size(); i ++) {
                        binStringOne = binStringOne + binTwoArray.get(i);
                    }
                    textArea.setText(binStringOne);
                }
            }
        }

        if (e.getSource() == btnpm) {
            if (tempOper[0] == 0 && tempNumOne[0] != -1) { // first num
                tempNumOne[0] = tempNumOne[0] * -1;
                textArea.setText(tempNumOne[0] + "");
            } else if (tempNumTwo[0] != -1 && tempEqual[0] == -1) { // second num
                tempNumTwo[0] = tempNumTwo[0] * -1;
                textArea.setText(tempNumTwo[0] + "");
            } else { // equals num
                tempEqual[0] = tempEqual[0] * -1;
                textArea.setText(tempEqual[0] + "");
            }

        }

        if (e.getSource() == btnA) {
            if (currentSetting[0] == 1) {
                if (tempOper[0] > 0) {
                    numTwoHex[0] = numTwoHex[0] + "A";
                    textArea.setText(numTwoHex[0]);
                } else {
                    numOneHex[0] = numOneHex[0] + "A";
                    textArea.setText(numOneHex[0]);
                }
            }
        }

        if (e.getSource() == btnB) {
            if (currentSetting[0] == 1) {
                if (tempOper[0] > 0) {
                    numTwoHex[0] = numTwoHex[0] + "B";
                    textArea.setText(numTwoHex[0]);
                } else {
                    numOneHex[0] = numOneHex[0] + "B";
                    textArea.setText(numOneHex[0]);
                }
            }
        }

        if (e.getSource() == btnC_1) {
            if (currentSetting[0] == 1) {
                if (tempOper[0] > 0) {
                    numTwoHex[0] = numTwoHex[0] + "C";
                    textArea.setText(numTwoHex[0]);
                } else {
                    numOneHex[0] = numOneHex[0] + "C";
                    textArea.setText(numOneHex[0]);
                }
            }
        }

        if (e.getSource() == btnD) {
            if (currentSetting[0] == 1) {
                if (tempOper[0] > 0) {
                    numTwoHex[0] = numTwoHex[0] + "D";
                    textArea.setText(numTwoHex[0]);
                } else {
                    numOneHex[0] = numOneHex[0] + "D";
                    textArea.setText(numOneHex[0]);
                }
            }
        }

        if (e.getSource() == btnE) {
            if (currentSetting[0] == 1) {
                if (tempOper[0] > 0) {
                    numTwoHex[0] = numTwoHex[0] + "E";
                    textArea.setText(numTwoHex[0]);
                } else {
                    numOneHex[0] = numOneHex[0] + "E";
                    textArea.setText(numOneHex[0]);
                }
            }
        }

        if (e.getSource() == btnF) {
            if (currentSetting[0] == 1) {
                if (tempOper[0] > 0) {
                    numTwoHex[0] = numTwoHex[0] + "F";
                    textArea.setText(numTwoHex[0]);
                } else {
                    numOneHex[0] = numOneHex[0] + "F";
                    textArea.setText(numOneHex[0]);
                }
            }
        }

        // sets others false
        if (e.getSource() == rdbtnQword) {

                rdbtnQword.setSelected(true);
                rdbtnWord.setSelected(false);
                rdbtnDword.setSelected(false);
                rdbtnByte.setSelected(false);
        }

        if (e.getSource() == rdbtnWord) {

            rdbtnQword.setSelected(false);
            rdbtnWord.setSelected(true);
            rdbtnDword.setSelected(false);
            rdbtnByte.setSelected(false);
        }

        if (e.getSource() == rdbtnDword) {

            rdbtnQword.setSelected(false);
            rdbtnWord.setSelected(false);
            rdbtnDword.setSelected(true);
            rdbtnByte.setSelected(false);
        }

        if (e.getSource() == rdbtnByte) {

            rdbtnQword.setSelected(false);
            rdbtnWord.setSelected(false);
            rdbtnDword.setSelected(false);
            rdbtnByte.setSelected(true);
        }
    }
}
